<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/DELL/bacchee.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1378"/><column_width id="4" width="0"/><expanded_item id="0" parent="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="StudentsPerformance" custom_title="0" dock_id="1" table="4,19:mainStudentsPerformance"/><dock_state state="000000ff00000000fd000000010000000200000463000002e4fc0100000001fb000000160064006f0063006b00420072006f00770073006500310100000000000004630000015c00ffffff000004630000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="StudentsPerformance" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="54"/><column index="2" value="87"/><column index="3" value="156"/><column index="4" value="101"/><column index="5" value="138"/><column index="6" value="70"/><column index="7" value="83"/><column index="8" value="81"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">-- 1. List top 5 students with highest average scores.

SELECT &quot;gender&quot;, &quot;math score&quot;, &quot;reading score&quot;, &quot;writing score&quot;,
       (&quot;math score&quot; + &quot;reading score&quot; + &quot;writing score&quot;)/3.0 AS avg_score
FROM &quot;StudentsPerformance&quot;
ORDER BY avg_score DESC
LIMIT 5;



-- 2. Find the average math, reading, and writing scores by gender.
SELECT gender,
       ROUND(AVG(&quot;math score&quot;),2)   AS avg_math,
       ROUND(AVG(&quot;reading score&quot;),2)AS avg_reading,
       ROUND(AVG(&quot;writing score&quot;),2)AS avg_writing
FROM StudentsPerformance
GROUP BY gender;



-- 3. Compare average scores of students who completed test prep vs. those who didnâ€™t.
SELECT &quot;test preparation course&quot;,
       ROUND(AVG((&quot;math score&quot; + &quot;reading score&quot; + &quot;writing score&quot;)/3.0),2) AS avg_score
FROM StudentsPerformance
GROUP BY &quot;test preparation course&quot;;



-- 4. Count how many students fall into each performance category.
SELECT CASE
           WHEN (&quot;math score&quot; + &quot;reading score&quot; + &quot;writing score&quot;)/3.0 &lt; 50 THEN 'Low'
           WHEN (&quot;math score&quot; + &quot;reading score&quot; + &quot;writing score&quot;)/3.0 &lt; 75 THEN 'Medium'
           ELSE 'High'
       END AS performance_category,
       COUNT(*) AS student_count
FROM StudentsPerformance
GROUP BY performance_category;



-- 5. Identify which ethnic group has the highest average total score.
SELECT &quot;race/ethnicity&quot;,
       ROUND(AVG(&quot;math score&quot; + &quot;reading score&quot; + &quot;writing score&quot;),2) AS avg_total
FROM StudentsPerformance
GROUP BY &quot;race/ethnicity&quot;
ORDER BY avg_total DESC
LIMIT 1;
</sql><current_tab id="0"/></tab_sql></sqlb_project>
